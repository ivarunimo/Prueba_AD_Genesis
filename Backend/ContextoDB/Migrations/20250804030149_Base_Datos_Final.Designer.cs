// <auto-generated />
using System;
using ContextoDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContextoDB.Migrations
{
    [DbContext(typeof(BancaContext))]
    [Migration("20250804030149_Base_Datos_Final")]
    partial class Base_Datos_Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContextoDB.Tables.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("account_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("balance")
                        .HasColumnType("float");

                    b.Property<int>("id_user")
                        .HasColumnType("int");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("id_user");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ContextoDB.Tables.DebitCard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("expDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_account")
                        .HasColumnType("int");

                    b.Property<string>("name_card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_account");

                    b.ToTable("DebitCard");
                });

            modelBuilder.Entity("ContextoDB.Tables.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_user")
                        .HasColumnType("int");

                    b.Property<int>("kind")
                        .HasColumnType("int");

                    b.Property<int>("origin")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_user");

                    b.HasIndex("origin");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("ContextoDB.Tables.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("destiny")
                        .HasColumnType("int");

                    b.Property<int>("origin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("destiny");

                    b.HasIndex("origin");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("ContextoDB.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContextoDB.Tables.Account", b =>
                {
                    b.HasOne("ContextoDB.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ContextoDB.Tables.DebitCard", b =>
                {
                    b.HasOne("ContextoDB.Tables.Account", "Account")
                        .WithMany()
                        .HasForeignKey("id_account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ContextoDB.Tables.Movement", b =>
                {
                    b.HasOne("ContextoDB.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContextoDB.Tables.Account", "Account")
                        .WithMany()
                        .HasForeignKey("origin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ContextoDB.Tables.Transfer", b =>
                {
                    b.HasOne("ContextoDB.Tables.Account", "DestinyAccount")
                        .WithMany()
                        .HasForeignKey("destiny")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContextoDB.Tables.Account", "OriginAccount")
                        .WithMany()
                        .HasForeignKey("origin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinyAccount");

                    b.Navigation("OriginAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
